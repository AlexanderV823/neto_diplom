
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
    
    Если ИмяСобытия = "ОбновитьТЧАвто" Тогда
        
        Прочитать();
                
    КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТЧ(Команда)
	
	Если Объект.Проведен = Истина Тогда
	
		ТекстСообщения = НСтр("ru = 'Для корректного формирования начислений отмените проведение документа или создайте новый.'");

		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

		Возврат;
	
	КонецЕсли;
	
	Если Объект.Выплаты.Количество() > 0 Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ЗаполнитьТЧПродолжить", ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Все введенные строки будут очищены. Продолжить?'");
		
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, "Подтвердите действие", КодВозвратаДиалога.Нет);
	
	Иначе
	
		ЗаполнитьТЧНаСервере();
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВызватьАвтоначисление(Ссылка, Параметры) Экспорт

    Если ЗначениеЗаполнено(Ссылка) Тогда 
    
        Если Параметры.Форма.Объект.Выплаты.Количество() > 0 Тогда //Необходимо упростить получение ТЧ, либо убрать проверку в целом.
                
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Ссылка", Ссылка);
            
            ОбработчикОповещения = Новый ОписаниеОповещения("ВызватьАвтоначислениеПродолжить", Параметры.Форма, ДополнительныеПараметры);
            ТекстВопроса = НСтр("ru = 'Все введенные строки будут очищены. Продолжить?'");
            ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, "Подтвердите действие", КодВозвратаДиалога.Нет);
    
        Иначе
            
            ВызватьАвтоначислениеНаСервере(Ссылка);
			
			Оповестить("ОбновитьТЧАвто");

        КонецЕсли;
    
	Иначе
	    
	    ТекстСообщения = НСтр("ru = 'Необходимо сначала записать документ.'");
	    
	    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	    
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВызватьАвтоначислениеПродолжить(КодВозврата, ДополнительныеПараметры) Экспорт

    Если КодВозврата = КодВозвратаДиалога.Да Тогда
        
		ВызватьАвтоначислениеНаСервере(ДополнительныеПараметры.Ссылка);
		
		Оповестить("ОбновитьТЧАвто");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВызватьАвтоначислениеНаСервере(Ссылка)
    
        ДокументОбъект = РеквизитФормыВЗначение("Объект");
        ДокументОбъект.ВыполнитьАвтоначисление(Ссылка);

	КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧПродолжить(КодВозврата, ДополнительныеПараметры) Экспорт

    Если КодВозврата = КодВозвратаДиалога.Да Тогда

		ЗаполнитьТЧНаСервере();
		
	КонецЕсли;

КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьТЧНаСервере()

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник КАК Сотрудник,
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВидРасчета КАК ВидРасчета,
        |    СУММА(ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток) КАК Сумма
        |ИЗ
        |    РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Период,) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник,
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВидРасчета";

    Период = Новый Граница(Объект.Дата, ВидГраницы.Включая);
        
    Запрос.УстановитьПараметр("Период", Период);
            
	Если Запрос.Выполнить().Пустой() Тогда
		
		ТекстСообщения = НСтр("ru = 'На дату документа начислений нет.'");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
	Иначе
	
		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();
	
		Объект.Выплаты.Очистить();

		Пока Выборка.Следующий() Цикл

			НоваяСтрока = Объект.Выплаты.Добавить();

			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);

		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры	
	
#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти