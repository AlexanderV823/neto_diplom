
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

    //Если Выплаты.Количество() = 0 Тогда
    //    
    //    Возврат;
    //    
    //КонецЕсли;
    
    // регистр ВКМ_ВзаиморасчетыССотрудниками
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
    ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками");
    ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
    ЭлементБлокировки.ИсточникДанных = Выплаты;
    ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Сотрудник", "Сотрудник");
    Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |    ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник КАК Сотрудник,
	    |    ВКМ_ВыплатаЗарплатыВыплаты.ВидРасчета КАК ВидРасчета,
	    |    СУММА(ВКМ_ВыплатаЗарплатыВыплаты.Сумма) КАК Сумма,
	    |    ВКМ_ВыплатаЗарплатыВыплаты.НомерСтроки КАК НомерСтроки
	    |ПОМЕСТИТЬ ВТ_ДанныеДокумента
	    |ИЗ
	    |    Документ.ВКМ_ВыплатаЗарплаты.Выплаты КАК ВКМ_ВыплатаЗарплатыВыплаты
	    |ГДЕ
	    |    ВКМ_ВыплатаЗарплатыВыплаты.Ссылка = &Ссылка
	    |СГРУППИРОВАТЬ ПО
	    |    ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник,
	    |    ВКМ_ВыплатаЗарплатыВыплаты.ВидРасчета,
	    |    ВКМ_ВыплатаЗарплатыВыплаты.НомерСтроки
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |    ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	    |    ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
	    |    ВТ_ДанныеДокумента.Сумма КАК Сумма,
	    |    ЕСТЬNULL(ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	    |    ВТ_ДанныеДокумента.Сотрудник.Представление КАК СотрудникПредставление,
	    |    ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки
	    |ИЗ
	    |    ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	    |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Дата, Сотрудник В
	    |            (ВЫБРАТЬ
	    |                ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	    |            ИЗ
	    |                ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
	    |        ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

        Если Выборка.СуммаОстаток = 0 Тогда
            
            ТекстСообщения = НСтр("ru = 'У сотрудника %1 начислений нет.'");
       
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ТекстСообщения, Выборка.СотрудникПредставление), , "Выплаты[" + Выборка.НомерСтроки + "].Сотрудник", "Объект", Отказ);
            
            Продолжить;
        
        ИначеЕсли Выборка.Сумма > Выборка.СуммаОстаток Тогда
        
            ТекстСообщения = НСтр("ru = 'Проверьте правильность начисления сотруднику %1. Сумма к выплате: %2.'");
       
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ТекстСообщения, Выборка.СотрудникПредставление, Выборка.СуммаОстаток), , "Выплаты[" + Выборка.НомерСтроки + "].Сотрудник", "Объект", Отказ);
        
            Продолжить;
        
        КонецЕсли;

        Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.Сумма = Выборка.Сумма;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьАвтоначисление(Ссылка) Экспорт

    ДокументОбъект = Ссылка.ПолучитьОбъект();
    
    ДокументОбъект.Выплаты.Очистить();

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник КАК Сотрудник,
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВидРасчета КАК ВидРасчета,
        |    СУММА(ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток) КАК Сумма
        |ИЗ
        |    РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Период,) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник,
        |    ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВидРасчета";
            
    Период = Новый Граница(Дата, ВидГраницы.Включая);
        
    Запрос.УстановитьПараметр("Период", Период);
            
    РезультатЗапроса = Запрос.Выполнить();
            
    Выборка = РезультатЗапроса.Выбрать();
            
    Пока Выборка.Следующий() Цикл
            
        НоваяСтрока = ДокументОбъект.Выплаты.Добавить();
            
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);  
        
    КонецЦикла;
    
    ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
