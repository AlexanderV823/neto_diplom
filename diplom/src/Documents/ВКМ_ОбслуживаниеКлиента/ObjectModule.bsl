
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    
    Если ОбменДанными.Загрузка Тогда
        
        Возврат;
    
    КонецЕсли;
    
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
        |ИЗ
        |    Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
        |ГДЕ
        |    ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
        |    И ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора = &ВидДоговора
        |    И ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_НачалоДействияДоговора <= &ДатаДокумента
        |    И ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ОкончаниеДействияДоговора >= &ДатаДокумента";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание);
    Запрос.УстановитьПараметр("ДатаДокумента", Дата);
        
    Если Запрос.Выполнить().Пустой() Тогда
        
        ТекстСообщения = НСтр("ru = 'Проверьте правильность выбора договора:
                                    |Должен быть выбран договор с типом Абонентское обслуживание.
                                    |Дата документа должна быть в пределах срока действия договора.'");
       
        ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Договор", "Объект", Отказ);
        
        Возврат;
        
    Иначе
   
        СтоимостьЧасаРаботы = Запрос.Выполнить().Выгрузить()[0].СтоимостьЧасаРаботы;
        
        //Поскольку группировать в запросе нечего, просто обходим ТЧ в цикле.
        //Из запроса, если он что-то выдал, берем стоимость часа работы.
        //Если запрос пустой, то до обработки движения выполнение программы не дойдет.
        
        // регистр ВКМ_ВыполненныеКлиентуРаботы
        Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
        
        Для Каждого ТекСтрокаВыполненныеРаботы из ВыполненныеРаботы Цикл 
            
            Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
            Движение.Период = Дата;
            Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
            Движение.Клиент = Клиент;
            Движение.Договор = Договор;
            Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
            Движение.СуммаКОплате = СтоимостьЧасаРаботы * ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
        
        КонецЦикла;
                                           
    КонецЕсли;
   
КонецПроцедуры

#КонецОбласти

#КонецЕсли
