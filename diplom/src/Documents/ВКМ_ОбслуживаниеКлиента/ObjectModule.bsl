
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
    ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_НачалоДействияДоговора, ВКМ_ОкончаниеДействияДоговора");
    
    Если ДанныеДоговора.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание") Тогда
    
        ТекстСообщения = НСтр("ru = 'Проверьте правильность выбора договора:
                                    |Должен быть выбран договор с типом Абонентское обслуживание.'");
        ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Договор", "Объект", Отказ);
    
    КонецЕсли;
    
    Если Дата < ДанныеДоговора.ВКМ_НачалоДействияДоговора Или Дата > ДанныеДоговора.ВКМ_ОкончаниеДействияДоговора Тогда
    
        ТекстСообщения = НСтр("ru = 'Проверьте правильность выбора договора:
                                    |Дата документа должна быть в пределах срока действия договора.'");
       
        ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Договор", "Объект", Отказ);
    
    КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    
    Если ОбменДанными.Загрузка Тогда
        
        Возврат;
    
    КонецЕсли;
    
    ДанныеОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ДатаПроведенияРабот, ВремяНачалаРабот, Специалист"); 
    
    Если Не ЭтоНовый() Тогда
    
        Если ДанныеОбъекта.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
            
            ДополнительныеСвойства.Вставить("ДатаИзменена", Истина);
             
        ИначеЕсли ДанныеОбъекта.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
            
            ДополнительныеСвойства.Вставить("ВремяРаботИзменено", Истина);
            
        ИначеЕсли ДанныеОбъекта.Специалист <> Специалист Тогда
            
            ДополнительныеСвойства.Вставить("СпециалистИзменен", Истина);
                
        КонецЕсли;
    
    Иначе
            
        ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
        
    КонецЕсли;

    ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
        
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
        |    ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
        |    СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
        |ПОМЕСТИТЬ ВТ_ДанныеДокумента
        |ИЗ
        |    Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
        |        ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
        |        ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
        |ГДЕ
        |    ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы,
        |    ВКМ_ОбслуживаниеКлиента.Специалист
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
        |    ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
        |ПОМЕСТИТЬ ВТ_УсловияОплаты
        |ИЗ
        |    РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
        |        ВКМ_УсловияОплатыСотрудниковСрезПоследних
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    ВТ_ДанныеДокумента.СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
        |    ВТ_ДанныеДокумента.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
        |    ВТ_УсловияОплаты.ПроцентОтРабот КАК ПроцентОтРабот,
        |    ВТ_ДанныеДокумента.Специалист.Представление КАК Специалист
        |ИЗ
        |    ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
        |        ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УсловияОплаты КАК ВТ_УсловияОплаты
        |        ПО ВТ_ДанныеДокумента.Специалист = ВТ_УсловияОплаты.Сотрудник";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("Дата", Дата);
    Запрос.УстановитьПараметр("Сотрудник", Специалист);
        
    РезультатЗапроса = Запрос.Выполнить();
    
    Выборка = РезультатЗапроса.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        
        Если Выборка.ПроцентОтРабот = Неопределено Тогда
           
            ТекстСообщения = НСтр("ru = 'Специалисту %1 не установлен процент оплаты от работ!'");
        
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ТекстСообщения, Выборка.Специалист), , "Специалист", "Объект", Отказ);
            
            Возврат;
            
        КонецЕсли;
        
        // регистр ВКМ_ВыполненныеКлиентуРаботы
        Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
        
        Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
        Движение.Период = Дата;
        Движение.Клиент = Клиент;
        Движение.Договор = Договор;
        Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
        Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы;
             
        
        // регистр ВКМ_ВыполненныеСотрудникомРаботы
        Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
        
        Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
        Движение.Период = Дата;
        Движение.Сотрудник = Специалист;
        Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
        Движение.СуммаКОплате = (Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот) / 100;
               
    КонецЦикла;
   
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
    
    Если ОбменДанными.Загрузка Тогда
        
        Возврат;
    
    КонецЕсли;    
    
    Если ДополнительныеСвойства.ЭтоНовый Тогда
        
        ТекстСообщения = НСтр("ru = 'Создан новый документ %1:
                                    |Дата работ: %2
                                    |Время начала работ: %3
                                    |Время окончания работ %4
                                    |Исполнитель: %5'");
       
        ТекстСообщенияВТелеграм = СтрШаблон(ТекстСообщения,
                                            Ссылка, 
                                            Формат(ДатаПроведенияРабот, "ДЛФ=DD;"), 
                                            Формат(ВремяНачалаРабот, "ДЛФ=DT;"), 
                                            Формат(ВремяОкончанияРабот, "ДЛФ=DDT;"),
                                            Специалист);
        
        НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
        НовыйЭлемент.ТекстСообщения = ТекстСообщенияВТелеграм;
        НовыйЭлемент.Записать();
        
    Иначе  
   
        Если ДополнительныеСвойства.ДатаИзменена Тогда
                
            ТекстСообщения = НСтр("ru = 'В документе: %1 изменена дата проведения работ.
                                        |Новая дата: %2'");
               
            ТекстСообщенияВТелеграм = СтрШаблон(ТекстСообщения, Ссылка, ДатаПроведенияРабот);
                
            НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
            НовыйЭлемент.ТекстСообщения = ТекстСообщенияВТелеграм;
            НовыйЭлемент.Записать(); 
                    
        КонецЕсли;
            
        Если ДополнительныеСвойства.ВремяРаботИзменено Тогда
                
            ТекстСообщения = НСтр("ru = 'В документе: %1 изменено время проведения работ.
                                        |Новое время с %2 по %3'");
               
            ТекстСообщенияВТелеграм = СтрШаблон(ТекстСообщения,
                                                Ссылка,
                                                Формат(ВремяНачалаРабот, "ДЛФ=DT;"),
                                                Формат(ВремяОкончанияРабот, "ДЛФ=DDT;"));
                
            НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
            НовыйЭлемент.ТекстСообщения = ТекстСообщенияВТелеграм;
            НовыйЭлемент.Записать(); 
                    
        КонецЕсли;
            
        Если ДополнительныеСвойства.СпециалистИзменен Тогда
            
            ТекстСообщения = НСтр("ru = 'В документе: %1 изменен специалист.
                                        |Новый ответственный: %2'");
           
            ТекстСообщенияВТелеграм = СтрШаблон(ТекстСообщения,
                                                Ссылка,
                                                Специалист);
            
            НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
            НовыйЭлемент.ТекстСообщения = ТекстСообщенияВТелеграм;
            НовыйЭлемент.Записать(); 
                
        КонецЕсли;
    
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли