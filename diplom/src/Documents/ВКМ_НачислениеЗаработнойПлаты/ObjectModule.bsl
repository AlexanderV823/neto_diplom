
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    СформироватьДвижения();
    
    РассчитатьОклад();
    
    РассчитатьОтпуск();
    
    РассчитатьНДФЛ();
    
    РассчитатьЗарплатуКВыплате();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
    
    Если Начисления.Количество() = 0 Тогда
        
        Возврат;
        
    КонецЕсли;
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ПериодДействияНачало,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания КАК ПериодДействияОкончание,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
        |    МАКСИМУМ(ВКМ_УсловияОплатыСотрудников.Период) КАК Период
        |ПОМЕСТИТЬ ВТ_ДанныеПоОкладам
        |ИЗ
        |    Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
        |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
        |        ПО ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник
        |        И ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала >= ВКМ_УсловияОплатыСотрудников.Период
        |ГДЕ
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
        |    И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &Оклад
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    ВТ_ДанныеПоОкладам.Сотрудник КАК Сотрудник,
        |    ВТ_ДанныеПоОкладам.ВидРасчета КАК ВидРасчета,
        |    ВТ_ДанныеПоОкладам.ПериодДействияНачало КАК ПериодДействияНачало,
        |    ВТ_ДанныеПоОкладам.ПериодДействияОкончание КАК ПериодДействияКонец,
        |    ВТ_ДанныеПоОкладам.ГрафикРаботы КАК ГрафикРаботы,
        |    ВКМ_УсловияОплатыСотрудников.Оклад КАК Показатель,
        |    NULL КАК БазовыйПериодНачало,
        |    NULL КАК БазовыйПериодКонец
        |ИЗ
        |    РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
        |        ПРАВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоОкладам КАК ВТ_ДанныеПоОкладам
        |        ПО ВТ_ДанныеПоОкладам.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник
        |        И ВТ_ДанныеПоОкладам.Период = ВКМ_УсловияОплатыСотрудников.Период
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания,
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы,
        |    NULL,
        |    НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала, МЕСЯЦ, -12), МЕСЯЦ),
        |    КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ)
        |ИЗ
        |    Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
        |ГДЕ
        |    ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
        |    И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &Отпуск";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);	
    Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Выборка = РезультатЗапроса.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        
        Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
        Движение.ПериодРегистрации = Дата;
        Движение.ПериодДействияНачало = Выборка.ПериодДействияНачало;
        Движение.ПериодДействияКонец = Выборка.ПериодДействияКонец;
        Движение.БазовыйПериодНачало = Выборка.БазовыйПериодНачало;
        Движение.БазовыйПериодКонец = Выборка.БазовыйПериодКонец;
        Движение.ВидРасчета = Выборка.ВидРасчета;
        Движение.Сотрудник = Выборка.Сотрудник;
        Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
        Движение.Результат = Выборка.Показатель;

    КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать();
	
    Для Каждого ТекСтрокаНачисления из Начисления Цикл
        
        Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия Тогда
            
            Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
            Движение.ПериодРегистрации = Дата;
            Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
            Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
            Движение.Результат = ТекСтрокаНачисления.Размер;    
        
        КонецЕсли;
   
    КонецЦикла;
    
    Движения.ВКМ_ОсновныеНачисления.Записать();
    Движения.ВКМ_ДополнительныеНачисления.Записать();

КонецПроцедуры

Процедура РассчитатьОклад() Экспорт
       
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
        |ИЗ
        |    РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
        |    И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
       
    Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
       
    РезультатЗапроса = Запрос.Выполнить();
       
    Выборка = РезультатЗапроса.Выбрать();
       
    Пока Выборка.Следующий() Цикл
        
        Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
        Движение.ЧасовОтработано = Выборка.Факт / 8;
        Движение.Результат = Движение.Результат * Выборка.Факт / Выборка.План;               
        
    КонецЦикла;
    
    Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);

КонецПроцедуры

Процедура РассчитатьОтпуск()
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ЧасовОтработаноБаза, 0) КАК ЧасовОтработаноБаза,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
        |ИЗ
        |    РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
        |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
        |            ВидРасчета = &Отпуск
        |        И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
        |        ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
        |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Отпуск
        |        И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
        |        ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
        |ГДЕ
        |    ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск
        |    И ВКМ_ОсновныеНачисления.Регистратор = &Ссылка";
        
        
    Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
        
    Измерения = Новый Массив;
    Измерения.Добавить("Сотрудник");
    
    Запрос.УстановитьПараметр("Измерения", Измерения);
        
    РезультатЗапроса = Запрос.Выполнить();
        
    Выборка = РезультатЗапроса.Выбрать();
        
    Пока Выборка.Следующий() Цикл
        
        Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
        Движение.ЧасовОтработано = Выборка.Факт / 8;
        Движение.Результат = Выборка.РезультатБаза / Выборка.ЧасовОтработаноБаза * Движение.ЧасовОтработано;
        
        Если Движение.Сторно Тогда
            
            Движение.ЧасовОтработано = - Движение.ЧасовОтработано;
            Движение.Результат = - Движение.Результат;
            
        КонецЕсли;

    КонецЦикла;
    
    Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
    
КонецПроцедуры

Процедура РассчитатьНДФЛ()
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
        |    СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат
        |ИЗ
        |    РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
        |ГДЕ
        |    ВКМ_ОсновныеНачисления.Регистратор.Ссылка = &Ссылка
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_ОсновныеНачисления.Сотрудник
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |    ВКМ_ДополнительныеНачисления.Сотрудник,
        |    СУММА(ВКМ_ДополнительныеНачисления.Результат)
        |ИЗ
        |    РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
        |ГДЕ
        |    ВКМ_ДополнительныеНачисления.Регистратор.Ссылка = &Ссылка
        |СГРУППИРОВАТЬ ПО
        |    ВКМ_ДополнительныеНачисления.Сотрудник";
        
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
        
    РезультатЗапроса = Запрос.Выполнить();
        
    Выборка = РезультатЗапроса.Выбрать();
        
    Пока Выборка.Следующий() Цикл
            
        Движение = Движения.ВКМ_Удержания.Добавить();
        Движение.ПериодРегистрации = Дата;
        Движение.Сотрудник = Выборка.Сотрудник;
        Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
        Движение.Результат = (Выборка.Результат * 13) / 100;
                    
    КонецЦикла;
    
    Движения.ВКМ_Удержания.Записать();
    
КонецПроцедуры

Процедура РассчитатьЗарплатуКВыплате()
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |    ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
        |    ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0) КАК Результат,
        |    ВКМ_ОсновныеНачисления.ВидРасчета
        |ПОМЕСТИТЬ ВТ_Начисления
        |ИЗ
        |    РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
        |ГДЕ
        |    ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |    ВКМ_ДополнительныеНачисления.Сотрудник,
        |    ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0),
        |    NULL
        |ИЗ
        |    РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
        |ГДЕ
        |    ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    ВТ_Начисления.Сотрудник КАК Сотрудник,
        |    СУММА(ВТ_Начисления.Результат) КАК Результат,
        |    ВТ_Начисления.ВидРасчета
        |ПОМЕСТИТЬ ВТ_Группировка
        |ИЗ
        |    ВТ_Начисления КАК ВТ_Начисления
        |СГРУППИРОВАТЬ ПО
        |    ВТ_Начисления.Сотрудник,
        |    ВТ_Начисления.ВидРасчета
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    ВТ_Группировка.Сотрудник КАК Сотрудник,
        |    ВТ_Группировка.Результат КАК Результат,
        |    ВТ_Группировка.ВидРасчета КАК ВидРасчета,
        |    СУММА(ВКМ_Удержания.Результат) КАК НДФЛ
        |ИЗ
        |    ВТ_Группировка КАК ВТ_Группировка
        |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
        |        ПО ВТ_Группировка.Сотрудник = ВКМ_Удержания.Сотрудник
        |ГДЕ
        |    ВКМ_Удержания.Регистратор = &Ссылка
        |СГРУППИРОВАТЬ ПО
        |    ВТ_Группировка.Сотрудник,
        |    ВТ_Группировка.Результат,
        |    ВТ_Группировка.ВидРасчета";
        
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
      
    РезультатЗапроса = Запрос.Выполнить();
        
    Выборка = РезультатЗапроса.Выбрать();
        
    Пока Выборка.Следующий() Цикл
        
        Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
        Движение.Период = Дата;
        Движение.Сотрудник = Выборка.Сотрудник;
        Движение.ВидРасчета = Выборка.ВидРасчета;
        Движение.Сумма = Выборка.Результат - Выборка.НДФЛ;
        
    КонецЦикла;
    
    Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли
